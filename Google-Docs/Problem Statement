✅ Problem Statement
Design and implement a lightweight in-memory collaborative text editor that mimics essential Google Docs functionality.
The system should allow multiple users to:

--> Create, edit, and save documents.
--> Navigate using keyboard-style controls (arrow keys, page up/down).
--> Use undo/redo for content changes.
--> Maintain both draft and saved versions of documents.
--> Fetch all documents created by a user.
--> Delete documents with safe handling of operations on deleted files.
--> The system should be fast, responsive to user interactions, and modular for future enhancements like real-time collaboration, persistent storage, or concurrent editing.

✅ Functional Requirements (FR)
ID	Requirement
FR1	A user can create a new document (draft state by default).
FR2	A user can append or replace text in a document at the current cursor position.
FR3	A user can navigate through the document using Up, Down, Left, Right and Page Up/Page Down keys.
FR4	A user can perform Undo and Redo operations.
FR5	A user can save a document to persist its latest content state.
FR6	A user can fetch all documents they have created.
FR7	A user can delete a document.
FR8	The system should throw an error if operations are attempted on a deleted document.
FR9	The system should allow fetching and editing a draft version before saving.

✅ Non-Functional Requirements (NFR)
ID	Requirement
NFR1	Editing operations (append, replace, navigation) should be low-latency (sub-millisecond in-memory execution).
NFR2	Undo and Redo should be implemented with constant (O(1)) or amortized O(1) time complexity.
NFR3	The system should support documents up to 10,000+ lines efficiently.
NFR4	The system should allow multiple users with independent document workspaces.
NFR5	Code should follow clean architecture principles: separation of concerns via Entity, DAO, Service layers.
NFR6	Errors like accessing a deleted document should be centrally handled (e.g., in DAO layer).
NFR7	The system should be designed for easy extension into collaborative or persistent storage features.
